name: Android CI/CD

on:
  push:
    branches: ["main"]
  pull_request:
    branches: ["main"]

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup JDK 17
        uses: actions/setup-java@v4
        with:
          distribution: temurin
          java-version: '17'

      - name: Cache Gradle
        uses: actions/cache@v4
        with:
          path: |
            ~/.gradle/caches
            ~/.gradle/wrapper
          key: ${{ runner.os }}-gradle-${{ hashFiles('**/*.gradle*', '**/gradle-wrapper.properties') }}
          restore-keys: ${{ runner.os }}-gradle

      - name: Make gradlew executable
        run: chmod +x gradlew

      # ‚úÖ Debug: lint + testes + APK
      - name: Build (lint + unit tests)
        run: ./gradlew clean lint testDebugUnitTest assembleDebug

      - name: Upload Debug APK
        uses: actions/upload-artifact@v4
        with:
          name: app-debug
          path: app/build/outputs/apk/debug/app-debug.apk

      # üîë Keystore no runner (N√ÉO commitamos o .jks)
      - name: Decode Keystore
        shell: bash
        run: echo "${{ secrets.MYAPP_KEYSTORE_BASE64 }}" | base64 --decode > /home/runner/keystore.jks

      # üëÄ Confirma se o arquivo existe
      - name: Check keystore file
        run: |
          test -s /home/runner/keystore.jks || (echo "‚ùå Keystore vazio!" && exit 1)
          ls -lh /home/runner/keystore.jks

      # üîç Lista alias dentro do keystore
      - name: Verify Keystore Alias
        run: |
          keytool -list -keystore /home/runner/keystore.jks -storepass "${{ secrets.MYAPP_KEYSTORE_PASSWORD }}" || true
          echo "‚úÖ Esperado alias: ${{ secrets.MYAPP_KEY_ALIAS }}"

      # üßπ Evita reaproveitar build antigo
      - name: Clean before release
        run: ./gradlew clean

      # üì¶ Gera AAB assinado
      - name: Assemble Release AAB
        run: |
          ./gradlew bundleRelease \
            "-PMYAPP_KEYSTORE=/home/runner/keystore.jks" \
            "-PMYAPP_KEYSTORE_PASSWORD=${{ secrets.MYAPP_KEYSTORE_PASSWORD }}" \
            "-PMYAPP_KEY_ALIAS=${{ secrets.MYAPP_KEY_ALIAS }}" \
            "-PMYAPP_KEY_PASSWORD=${{ secrets.MYAPP_KEY_PASSWORD }}"

      - name: Upload Release AAB
        uses: actions/upload-artifact@v4
        with:
          name: app-release-aab
          path: app/build/outputs/bundle/release/app-release.aab

      # ‚òÅÔ∏è Upload para Play Console (internal track)
      - name: Upload to Play (internal)
        if: ${{ github.ref == 'refs/heads/main' }}
        uses: r0adkll/upload-google-play@v1
        with:
          serviceAccountJsonPlainText: ${{ secrets.SERVICE_ACCOUNT_JSON }}
          packageName: com.carlosribeiro.tempo_wt
          releaseFiles: app/build/outputs/bundle/release/app-release.aab
          track: internal
          status: completed
          inAppUpdatePriority: 0
          changesNotSentForReview: false
